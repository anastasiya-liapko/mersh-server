{"remainingRequest":"/Users/anastasia/Documents/job/vue/mersh/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/anastasia/Documents/job/vue/mersh/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/anastasia/Documents/job/vue/mersh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anastasia/Documents/job/vue/mersh/src/components/Select.vue?vue&type=template&id=ed6a05a8&","dependencies":[{"path":"/Users/anastasia/Documents/job/vue/mersh/src/components/Select.vue","mtime":1562595596497},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"select\", class: { isOpened: _vm.computedShow } },\n    [\n      _vm.selectedOption !== undefined && _vm.selectedOption !== \"\"\n        ? _c(\n            \"li\",\n            {\n              staticClass: \"select__toggle\",\n              attrs: { id: _vm.id },\n              on: {\n                click: function($event) {\n                  return _vm.toggleMenu()\n                }\n              }\n            },\n            [\n              _vm._v(\"\\n    \" + _vm._s(_vm.computedOption) + \"\\n    \"),\n              _c(\"span\", {\n                staticClass: \"select__caret icon-arrow-order\",\n                class: { open: _vm.computedShow }\n              })\n            ]\n          )\n        : _vm._e(),\n      _vm.selectedOption === undefined || _vm.selectedOption === \"\"\n        ? _c(\n            \"li\",\n            {\n              staticClass: \"select__toggle select__toggle_type_placeholder\",\n              attrs: { id: _vm.id },\n              on: {\n                click: function($event) {\n                  return _vm.toggleMenu()\n                }\n              }\n            },\n            [\n              _vm._v(\"\\n    \" + _vm._s(_vm.placeholder) + \"\\n    \"),\n              _c(\"span\", {\n                staticClass: \"select__caret icon-arrow-order\",\n                class: { open: _vm.computedShow }\n              })\n            ]\n          )\n        : _vm._e(),\n      _c(\"transition\", { attrs: { name: \"slide-bottom\", appear: \"\" } }, [\n        _c(\n          \"ul\",\n          {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.computedShow,\n                expression: \"computedShow\"\n              }\n            ],\n            staticClass: \"select__menu\",\n            class: { opened: _vm.computedShow }\n          },\n          [\n            _c(\"li\", { staticClass: \"select__menu-item\" }, [\n              _c(\"a\", {\n                staticClass: \"select__menu-link\",\n                attrs: { href: \"javascript:void(0)\" },\n                on: {\n                  click: function($event) {\n                    return _vm.updateOption(_vm.name, \"\")\n                  }\n                }\n              })\n            ]),\n            _vm._l(_vm.options, function(option) {\n              return _c(\n                \"li\",\n                { key: option.id, staticClass: \"select__menu-item\" },\n                [\n                  _c(\n                    \"a\",\n                    {\n                      staticClass: \"select__menu-link\",\n                      class: { isSelected: option.name === _vm.selectedOption },\n                      attrs: { href: \"javascript:void(0)\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.updateOption(_vm.name, option)\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n          \" + _vm._s(option.name) + \"\\n        \"\n                      )\n                    ]\n                  )\n                ]\n              )\n            })\n          ],\n          2\n        )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}