{"remainingRequest":"/Users/anastasia/Documents/job/vue/mersh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anastasia/Documents/job/vue/mersh/src/components/PopupOrder.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anastasia/Documents/job/vue/mersh/src/components/PopupOrder.vue","mtime":1562155713320},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { required, minLength, email, requiredUnless } from 'vuelidate/lib/validators'\nimport AwesomeMask from 'awesome-mask'\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      id: 'js-order',\n      data: {\n        name: '',\n        phone: '',\n        email: '',\n        message: ''\n      },\n      message: ''\n    }\n  },\n  mounted () {\n    var self = this\n    $('#' + this.id).on('hidden.bs.modal', function () {\n      self.resetForm()\n    })\n    $('#' + this.id).on('show.bs.modal', function () {\n      setTimeout(function () {\n        document.querySelector('.popup input').focus()\n      }, 400)\n    })\n  },\n  validations: {\n    data: {\n      name: {\n        required\n      },\n      phone: {\n        required: requiredUnless('email'),\n        minLength: minLength(18)\n      },\n      email: {\n        required: requiredUnless('phone'),\n        email\n      },\n      message: {\n        required\n      }\n    }\n  },\n  methods: {\n    resetForm () {\n      var self = this\n      Object.keys(self.data).forEach(function (key, index) {\n        self.data[key] = ''\n      })\n      self.$v.$reset()\n      self.message = ''\n    },\n    showMessage (text) {\n      var self = this\n      this.message = text\n      setTimeout(function () {\n        self.message = ''\n      }, 1300)\n    },\n    checkCaptcha () {\n      // проверяем элемент, содержащий код капчи\n      // 1. Получаем капчу\n      var captcha = grecaptcha.getResponse()\n      // 2. Если длина кода капчи, которой ввёл пользователь не равно 6,\n        // то сразу отмечаем капчу как невалидную (без отправки на сервер)\n      if (!captcha.length) {\n        // Выводим сообщение об ошибке\n        $('#recaptchaError').text('* Вы не прошли проверку \"Я не робот\"')\n      } else {\n        // получаем элемент, содержащий капчу\n        $('#recaptchaError').text('')\n      }\n    },\n    submit () {\n      var self = this\n      self.checkCaptcha()\n      axios.post('/post.php', this.data)\n        .then(function (response) {\n          console.log(response)\n          self.showMessage('Отправлено!')\n          self.resetForm()\n        })\n        .catch(function (error) {\n          console.log(error)\n          self.showMessage('Ошибка!')\n        })\n    }\n  },\n  directives: {\n    'mask': AwesomeMask\n  }\n}\n",{"version":3,"sources":["PopupOrder.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PopupOrder.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"popup order modal fade\"\n    :id=\"id\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <button type=\"button\" class=\"close d-flex align-items-center justify-content-center\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span class=\"icon-close d-flex align-items-center justify-content-center\" aria-hidden=\"true\"></span>\n        </button>\n        <form class=\"popup-form d-flex flex-column align-items-center justify-content-center\">\n          <h2 class=\"popup-form__title\">Изготовление на заказ</h2>\n\n          <div class=\"popup-form__field d-flex flex-wrap align-items-center justify-content-between\">\n            <label class=\"popup-form__label mb-0\">Имя</label>\n            <input class=\"popup-form__input\"\n              :class=\"{invalid: $v.data.name.$error}\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Иван Петров\"\n              @blur=\"$v.data.name.$touch()\"\n              v-model=\"data.name\">\n            <p class=\"popup-form__error-text\"\n              v-if=\"$v.data.name.$error\">Укажите имя</p>\n          </div>\n\n          <div class=\"popup-form__field d-flex flex-wrap align-items-center justify-content-between\">\n            <label class=\"popup-form__label mb-0\">Телефон</label>\n            <input class=\"popup-form__input\"\n              :class=\"{invalid: $v.data.phone.$error}\"\n              type=\"text\"\n              name=\"phone\"\n              placeholder=\"+ 7 (ххх) ххх хх хх\"\n              v-mask=\"'+9 (999) 999-99-99'\"\n              @blur=\"$v.data.phone.$touch()\"\n              v-model=\"data.phone\">\n            <transition name=\"fade\">\n              <p class=\"popup-form__error-text\"\n                v-if=\"!$v.data.phone.required && $v.data.phone.$dirty\">\n                Укажите телефон или email\n              </p>\n              <p class=\"popup-form__error-text\"\n                v-if=\"!$v.data.phone.minLength\">\n                Введите телефон в формате + 7 (ххх) ххх хх хх\n              </p>\n            </transition>\n          </div>\n\n          <div class=\"popup-form__field d-flex flex-wrap align-items-center justify-content-between\">\n            <label class=\"popup-form__label mb-0\">Email</label>\n            <input class=\"popup-form__input\"\n              :class=\"{invalid: $v.data.email.$error}\"\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"mersh@site.com\"\n              @blur=\"$v.data.email.$touch()\"\n              v-model=\"data.email\">\n            <transition name=\"fade\">\n              <p class=\"popup-form__error-text\"\n                v-if=\"!$v.data.email.required && $v.data.email.$dirty\">\n                Укажите телефон или email\n              </p>\n              <p class=\"popup-form__error-text\"\n                v-if=\"!$v.data.email.email\">\n                Введите email в формате mersh@site.com\n              </p>\n            </transition>\n          </div>\n\n          <div class=\"popup-form__field d-flex flex-wrap align-items-center justify-content-between\">\n            <label class=\"popup-form__label mb-0\">Сообщение</label>\n            <textarea class=\"popup-form__textarea\"\n              :class=\"{invalid: $v.data.message.$error}\"\n              type=\"text\"\n              name=\"message\"\n              placeholder=\"Текст\"\n              @blur=\"$v.data.message.$touch()\"\n              v-model=\"data.message\"></textarea>\n            <transition name=\"fade\">\n              <p class=\"popup-form__error-text\"\n                v-if=\"$v.data.message.$error\">\n                Укажите сообщение\n              </p>\n            </transition>\n          </div>\n\n          <div class=\"recaptcha mr-md-5 mb-4 mb-md-0\">\n            <div class=\"g-recaptcha\" data-callback=\"recaptchaCallback\" data-sitekey=\"6Lf046sUAAAAAGo1IoPyjmFm19Ks4T-YYyAy72MA\"></div>\n            <div class=\"text-danger pl-2\" id=\"recaptchaError\"></div>\n          </div>\n\n          <button\n              class=\"popup-form__submit button button_form button_submit\"\n              @click.prevent=\"submit\"\n              :disabled=\"$v.$invalid\">\n              <span v-if=\"message !== ''\" class=\"button_submit-message\">{{ message }}</span>\n              <span v-else class=\"button_submit-text\">Отправить</span>\n          </button>\n\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { required, minLength, email, requiredUnless } from 'vuelidate/lib/validators'\nimport AwesomeMask from 'awesome-mask'\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      id: 'js-order',\n      data: {\n        name: '',\n        phone: '',\n        email: '',\n        message: ''\n      },\n      message: ''\n    }\n  },\n  mounted () {\n    var self = this\n    $('#' + this.id).on('hidden.bs.modal', function () {\n      self.resetForm()\n    })\n    $('#' + this.id).on('show.bs.modal', function () {\n      setTimeout(function () {\n        document.querySelector('.popup input').focus()\n      }, 400)\n    })\n  },\n  validations: {\n    data: {\n      name: {\n        required\n      },\n      phone: {\n        required: requiredUnless('email'),\n        minLength: minLength(18)\n      },\n      email: {\n        required: requiredUnless('phone'),\n        email\n      },\n      message: {\n        required\n      }\n    }\n  },\n  methods: {\n    resetForm () {\n      var self = this\n      Object.keys(self.data).forEach(function (key, index) {\n        self.data[key] = ''\n      })\n      self.$v.$reset()\n      self.message = ''\n    },\n    showMessage (text) {\n      var self = this\n      this.message = text\n      setTimeout(function () {\n        self.message = ''\n      }, 1300)\n    },\n    checkCaptcha () {\n      // проверяем элемент, содержащий код капчи\n      // 1. Получаем капчу\n      var captcha = grecaptcha.getResponse()\n      // 2. Если длина кода капчи, которой ввёл пользователь не равно 6,\n        // то сразу отмечаем капчу как невалидную (без отправки на сервер)\n      if (!captcha.length) {\n        // Выводим сообщение об ошибке\n        $('#recaptchaError').text('* Вы не прошли проверку \"Я не робот\"')\n      } else {\n        // получаем элемент, содержащий капчу\n        $('#recaptchaError').text('')\n      }\n    },\n    submit () {\n      var self = this\n      self.checkCaptcha()\n      axios.post('/post.php', this.data)\n        .then(function (response) {\n          console.log(response)\n          self.showMessage('Отправлено!')\n          self.resetForm()\n        })\n        .catch(function (error) {\n          console.log(error)\n          self.showMessage('Ошибка!')\n        })\n    }\n  },\n  directives: {\n    'mask': AwesomeMask\n  }\n}\n</script>\n\n<style lang=\"sass\">\n@import '@/sass/_variables.sass'\n.order\n  .popup-form__submit\n    margin-top: 65px\n\n@media(max-width: 767px)\n  .order\n    .popup-form__submit\n      // margin-top: 65px\n      margin-top: 8.475vw\n</style>\n"]}]}