{"remainingRequest":"/Users/anastasia/Documents/job/vue/mersh/node_modules/thread-loader/dist/cjs.js!/Users/anastasia/Documents/job/vue/mersh/node_modules/babel-loader/lib/index.js!/Users/anastasia/Documents/job/vue/mersh/node_modules/eslint-loader/index.js??ref--13-0!/Users/anastasia/Documents/job/vue/mersh/src/store/modules/cart.js","dependencies":[{"path":"/Users/anastasia/Documents/job/vue/mersh/src/store/modules/cart.js","mtime":1564392817699},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nvar state = {\n  cartProducts: [],\n  totalPrice: 0,\n  totalQuantity: 0,\n  disabled: false,\n  order: '',\n  deliveryPrice: 0,\n  orderNumber: ''\n};\nvar mutations = {\n  'ADD_TO_CART': function ADD_TO_CART(state, item) {\n    var record = state.cartProducts.find(function (element) {\n      return element.id === item.id && element.variant === item.variant;\n    });\n\n    if (record) {\n      record.quantity += item.quantity;\n      record.total = +(record.total + item.price * item.quantity).toFixed(10);\n    } else {\n      item.total = +(item.price * item.quantity).toFixed(10);\n      item.index = state.cartProducts.length;\n      state.cartProducts.push(item);\n    }\n\n    state.totalPrice = +(state.totalPrice + item.price * item.quantity).toFixed(10);\n    state.totalQuantity += item.quantity;\n  },\n  'REMOVE_FROM_CART': function REMOVE_FROM_CART(state, item) {\n    var record = state.cartProducts.find(function (element) {\n      return element.id === item.id && element.variant === item.variant;\n    });\n    state.cartProducts.splice(state.cartProducts.indexOf(record), 1);\n    state.cartProducts.forEach(function (elem, i) {\n      elem.index = i;\n    });\n    state.totalPrice = +(state.totalPrice - item.price * item.quantity).toFixed(10);\n    state.totalQuantity -= item.quantity;\n  },\n  'UPDATE_QUANTITY': function UPDATE_QUANTITY(state, item) {\n    var record = state.cartProducts.find(function (element) {\n      return element.id === item.id && element.index === item.index;\n    });\n    var change = item.quantity - record.quantity;\n\n    if (parseInt(item.quantity) === 0) {\n      state.cartProducts.splice(state.cartProducts.indexOf(record), 1);\n      state.cartProducts.forEach(function (elem, i) {\n        elem.index = i;\n      });\n    } else {\n      record.quantity = item.quantity;\n      record.total = +(record.price * item.quantity).toFixed(10);\n    }\n\n    state.totalPrice = +(state.totalPrice + item.price * change).toFixed(10);\n    state.totalQuantity += change;\n  },\n  'UPDATE_VARIANT': function UPDATE_VARIANT(state, item) {\n    var record = state.cartProducts.find(function (element) {\n      return element.id === item.id && element.index === item.index;\n    });\n\n    if (record) {\n      record.variant = item.variant;\n      record.total = +(record.price * item.quantity).toFixed(10);\n    }\n\n    state.totalPrice = 0;\n    state.cartProducts.forEach(function (elem) {\n      state.totalPrice += elem.total;\n    });\n    item.variant === '' ? state.disabled = true : state.disabled = false;\n  },\n  'ADD_DELIVERY': function ADD_DELIVERY(state, delivery) {\n    var change = delivery.price - state.deliveryPrice;\n    state.deliveryPrice = delivery.price;\n    state.totalPrice = +(state.totalPrice + change).toFixed(10);\n  },\n  'SAVE_TO_STORAGE': function SAVE_TO_STORAGE(state) {\n    localStorage.setItem('mershProducts', JSON.stringify(state.cartProducts));\n    localStorage.setItem('mershTotalPrice', JSON.stringify(state.totalPrice));\n    localStorage.setItem('mershTotalQuantity', JSON.stringify(state.totalQuantity));\n  },\n  'EMPTY_CART': function EMPTY_CART(state) {\n    state.cartProducts = [];\n    state.totalPrice = 0;\n    state.totalQuantity = 0;\n    state.order = [];\n    state.orderNumber = '';\n    state.disabled = false;\n  },\n  'CHECK_IF_VALID': function CHECK_IF_VALID(state) {\n    state.cartProducts.forEach(function (elem) {// if (elem.variant === '' && elem.variants !== undefined) {\n      //   state.disabled = true\n      // }\n    });\n  },\n  'SET_ORDER': function SET_ORDER(state, order) {\n    state.order = order;\n    localStorage.setItem('mershOrder', JSON.stringify(state.order));\n  },\n  'SET_ORDER_NUMBER': function SET_ORDER_NUMBER(state, number) {\n    state.orderNumber = number;\n    localStorage.setItem('mershOrderNumber', JSON.stringify(state.orderNumber));\n  }\n};\nvar actions = {\n  addToCart: function addToCart(_ref, item) {\n    var commit = _ref.commit;\n    commit('ADD_TO_CART', item);\n    commit('SAVE_TO_STORAGE');\n  },\n  removeFromCart: function removeFromCart(_ref2, item) {\n    var commit = _ref2.commit;\n    commit('REMOVE_FROM_CART', item);\n    commit('SAVE_TO_STORAGE');\n  },\n  updateQuantity: function updateQuantity(_ref3, item) {\n    var commit = _ref3.commit;\n    commit('UPDATE_QUANTITY', item);\n    commit('SAVE_TO_STORAGE');\n  },\n  updateVariant: function updateVariant(_ref4, item) {\n    var commit = _ref4.commit;\n    commit('UPDATE_VARIANT', item);\n    commit('SAVE_TO_STORAGE');\n  },\n  addDelivery: function addDelivery(_ref5, delivery) {\n    var commit = _ref5.commit;\n    commit('ADD_DELIVERY', delivery);\n    commit('SAVE_TO_STORAGE');\n  },\n  emptyCart: function emptyCart(_ref6) {\n    var commit = _ref6.commit;\n    commit('EMPTY_CART');\n  },\n  checkIfValid: function checkIfValid(_ref7) {\n    var commit = _ref7.commit;\n    commit('CHECK_IF_VALID');\n  },\n  setOrder: function setOrder(_ref8, order) {\n    var commit = _ref8.commit;\n    commit('SET_ORDER', order);\n  },\n  setOrderNumber: function setOrderNumber(_ref9, number) {\n    var commit = _ref9.commit;\n    commit('SET_ORDER_NUMBER', number);\n  }\n};\nvar getters = {\n  cartProducts: function cartProducts(state) {\n    return state.cartProducts;\n  },\n  totalPrice: function totalPrice(state) {\n    return state.totalPrice;\n  },\n  totalQuantity: function totalQuantity(state) {\n    return state.totalQuantity;\n  },\n  disabled: function disabled(state) {\n    return state.disabled;\n  },\n  order: function order(state) {\n    return state.order;\n  },\n  orderNumber: function orderNumber(state) {\n    return state.orderNumber;\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/Users/anastasia/Documents/job/vue/mersh/src/store/modules/cart.js"],"names":["state","cartProducts","totalPrice","totalQuantity","disabled","order","deliveryPrice","orderNumber","mutations","item","record","find","element","id","variant","quantity","total","price","toFixed","index","length","push","splice","indexOf","forEach","elem","i","change","parseInt","delivery","localStorage","setItem","JSON","stringify","number","actions","addToCart","commit","removeFromCart","updateQuantity","updateVariant","addDelivery","emptyCart","checkIfValid","setOrder","setOrderNumber","getters"],"mappings":"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","sourcesContent":["const state = {\n  cartProducts: [],\n  totalPrice: 0,\n  totalQuantity: 0,\n  disabled: false,\n  order: '',\n  deliveryPrice: 0,\n  orderNumber: ''\n}\n\nconst mutations = {\n  'ADD_TO_CART' (state, item) {\n    const record = state.cartProducts.find(element => element.id === item.id && element.variant === item.variant)\n    if (record) {\n      record.quantity += item.quantity\n      record.total = +(record.total + item.price * item.quantity).toFixed(10)\n    } else {\n      item.total = +(item.price * item.quantity).toFixed(10)\n      item.index = state.cartProducts.length\n      state.cartProducts.push(item)\n    }\n    state.totalPrice = +(state.totalPrice + item.price * item.quantity).toFixed(10)\n    state.totalQuantity += item.quantity\n  },\n  'REMOVE_FROM_CART' (state, item) {\n    const record = state.cartProducts.find(element => element.id === item.id && element.variant === item.variant)\n    state.cartProducts.splice(state.cartProducts.indexOf(record), 1)\n    state.cartProducts.forEach(function (elem, i) {\n      elem.index = i\n    })\n    state.totalPrice = +(state.totalPrice - item.price * item.quantity).toFixed(10)\n    state.totalQuantity -= item.quantity\n  },\n  'UPDATE_QUANTITY' (state, item) {\n    const record = state.cartProducts.find(element => element.id === item.id && element.index === item.index)\n    const change = item.quantity - record.quantity\n    if (parseInt(item.quantity) === 0) {\n      state.cartProducts.splice(state.cartProducts.indexOf(record), 1)\n      state.cartProducts.forEach(function (elem, i) {\n        elem.index = i\n      })\n    } else {\n      record.quantity = item.quantity\n      record.total = +(record.price * item.quantity).toFixed(10)\n    }\n    state.totalPrice = +(state.totalPrice + item.price * change).toFixed(10)\n    state.totalQuantity += change\n  },\n  'UPDATE_VARIANT' (state, item) {\n    const record = state.cartProducts.find(element => element.id === item.id && element.index === item.index)\n    if (record) {\n      record.variant = item.variant\n      record.total = +(record.price * item.quantity).toFixed(10)\n    }\n    state.totalPrice = 0\n    state.cartProducts.forEach(function (elem) {\n      state.totalPrice += elem.total\n    })\n    item.variant === '' ? state.disabled = true : state.disabled = false\n  },\n  'ADD_DELIVERY' (state, delivery) {\n    const change = delivery.price - state.deliveryPrice\n    state.deliveryPrice = delivery.price\n    state.totalPrice = +(state.totalPrice + change).toFixed(10)\n  },\n  'SAVE_TO_STORAGE' (state) {\n    localStorage.setItem('mershProducts', JSON.stringify(state.cartProducts))\n    localStorage.setItem('mershTotalPrice', JSON.stringify(state.totalPrice))\n    localStorage.setItem('mershTotalQuantity', JSON.stringify(state.totalQuantity))\n  },\n  'EMPTY_CART' (state) {\n    state.cartProducts = []\n    state.totalPrice = 0\n    state.totalQuantity = 0\n    state.order = []\n    state.orderNumber = ''\n    state.disabled = false\n  },\n  'CHECK_IF_VALID' (state) {\n    state.cartProducts.forEach(function (elem) {\n      // if (elem.variant === '' && elem.variants !== undefined) {\n      //   state.disabled = true\n      // }\n    })\n  },\n  'SET_ORDER' (state, order) {\n    state.order = order\n    localStorage.setItem('mershOrder', JSON.stringify(state.order))\n  },\n  'SET_ORDER_NUMBER' (state, number) {\n    state.orderNumber = number\n    localStorage.setItem('mershOrderNumber', JSON.stringify(state.orderNumber))\n  }\n}\n\nconst actions = {\n  addToCart: ({ commit }, item) => {\n    commit('ADD_TO_CART', item)\n    commit('SAVE_TO_STORAGE')\n  },\n  removeFromCart: ({ commit }, item) => {\n    commit('REMOVE_FROM_CART', item)\n    commit('SAVE_TO_STORAGE')\n  },\n  updateQuantity: ({ commit }, item) => {\n    commit('UPDATE_QUANTITY', item)\n    commit('SAVE_TO_STORAGE')\n  },\n  updateVariant: ({ commit }, item) => {\n    commit('UPDATE_VARIANT', item)\n    commit('SAVE_TO_STORAGE')\n  },\n  addDelivery: ({ commit }, delivery) => {\n    commit('ADD_DELIVERY', delivery)\n    commit('SAVE_TO_STORAGE')\n  },\n  emptyCart: ({ commit }) => {\n    commit('EMPTY_CART')\n  },\n  checkIfValid: ({ commit }) => {\n    commit('CHECK_IF_VALID')\n  },\n  setOrder: ({ commit }, order) => {\n    commit('SET_ORDER', order)\n  },\n  setOrderNumber: ({ commit }, number) => {\n    commit('SET_ORDER_NUMBER', number)\n  }\n}\n\nconst getters = {\n  cartProducts: state => {\n    return state.cartProducts\n  },\n  totalPrice: state => {\n    return state.totalPrice\n  },\n  totalQuantity: state => {\n    return state.totalQuantity\n  },\n  disabled: state => {\n    return state.disabled\n  },\n  order: state => {\n    return state.order\n  },\n  orderNumber: state => {\n    return state.orderNumber\n  }\n}\n\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n}\n"]}]}