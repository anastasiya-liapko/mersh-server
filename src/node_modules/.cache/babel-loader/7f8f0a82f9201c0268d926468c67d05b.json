{"remainingRequest":"/Users/anastasia/Documents/job/vue/mersh/node_modules/babel-loader/lib/index.js!/Users/anastasia/Documents/job/vue/mersh/node_modules/eslint-loader/index.js??ref--13-0!/Users/anastasia/Documents/job/vue/mersh/src/store/modules/cart.js","dependencies":[{"path":"/Users/anastasia/Documents/job/vue/mersh/src/store/modules/cart.js","mtime":1562925762759},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/job/vue/mersh/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nvar state = {\n  cartProducts: [],\n  totalPrice: 0,\n  totalQuantity: 0,\n  disabled: false\n};\nvar mutations = {\n  'ADD_TO_CART': function ADD_TO_CART(state, item) {\n    var record = state.cartProducts.find(function (element) {\n      return element.id === item.id && element.variant === item.variant;\n    });\n\n    if (record) {\n      record.quantity += item.quantity;\n      record.total += item.price * item.quantity;\n    } else {\n      item.total = item.price * item.quantity;\n      item.index = state.cartProducts.length;\n      state.cartProducts.push(item);\n    }\n\n    state.totalPrice += item.price * item.quantity;\n    state.totalQuantity += item.quantity;\n  },\n  'REMOVE_FROM_CART': function REMOVE_FROM_CART(state, item) {\n    var record = state.cartProducts.find(function (element) {\n      return element.id === item.id && element.variant === item.variant;\n    });\n    state.cartProducts.splice(state.cartProducts.indexOf(record), 1);\n    state.cartProducts.forEach(function (elem, i) {\n      elem.index = i;\n    });\n    state.totalPrice -= item.price * item.quantity;\n    state.totalQuantity -= item.quantity;\n  },\n  'UPDATE_QUANTITY': function UPDATE_QUANTITY(state, item) {\n    var record = state.cartProducts.find(function (element) {\n      return element.id === item.id && element.index === item.index;\n    });\n    var change = item.quantity - record.quantity;\n\n    if (parseInt(item.quantity) === 0) {\n      state.cartProducts.splice(state.cartProducts.indexOf(record), 1);\n    } else {\n      record.quantity = item.quantity;\n      record.total = record.price * item.quantity;\n    }\n\n    state.totalPrice += item.price * change;\n    state.totalQuantity += change;\n  },\n  'UPDATE_VARIANT': function UPDATE_VARIANT(state, item) {\n    var record = state.cartProducts.find(function (element) {\n      return element.id === item.id && element.index === item.index;\n    });\n\n    if (record) {\n      record.variant = item.variant;\n    }\n\n    item.variant === '' ? state.disabled = true : state.disabled = false;\n  },\n  'SAVE_TO_STORAGE': function SAVE_TO_STORAGE(state) {\n    localStorage.setItem('mershProducts', JSON.stringify(state.cartProducts));\n    localStorage.setItem('mershTotalPrice', JSON.stringify(state.totalPrice));\n    localStorage.setItem('mershTotalQuantity', JSON.stringify(state.totalQuantity));\n  },\n  'EMPTY_CART': function EMPTY_CART(state) {\n    state.cartProducts = [];\n    state.totalPrice = 0;\n    state.totalQuantity = 0;\n    state.disabled = false;\n  },\n  'CHECK_IF_VALID': function CHECK_IF_VALID(state) {\n    state.cartProducts.forEach(function (elem) {\n      if (elem.variant === '') {\n        state.disabled = true;\n      }\n    });\n  }\n};\nvar actions = {\n  addToCart: function addToCart(_ref, item) {\n    var commit = _ref.commit;\n    commit('ADD_TO_CART', item);\n    commit('SAVE_TO_STORAGE');\n  },\n  removeFromCart: function removeFromCart(_ref2, item) {\n    var commit = _ref2.commit;\n    commit('REMOVE_FROM_CART', item);\n    commit('SAVE_TO_STORAGE');\n  },\n  updateQuantity: function updateQuantity(_ref3, item) {\n    var commit = _ref3.commit;\n    commit('UPDATE_QUANTITY', item);\n    commit('SAVE_TO_STORAGE');\n  },\n  updateVariant: function updateVariant(_ref4, item) {\n    var commit = _ref4.commit;\n    commit('UPDATE_VARIANT', item);\n    commit('SAVE_TO_STORAGE');\n  },\n  emptyCart: function emptyCart(_ref5) {\n    var commit = _ref5.commit;\n    commit('EMPTY_CART');\n  },\n  checkIfValid: function checkIfValid(_ref6) {\n    var commit = _ref6.commit;\n    commit('CHECK_IF_VALID');\n  }\n};\nvar getters = {\n  cartProducts: function cartProducts(state) {\n    return state.cartProducts;\n  },\n  totalPrice: function totalPrice(state) {\n    return state.totalPrice;\n  },\n  totalQuantity: function totalQuantity(state) {\n    return state.totalQuantity;\n  },\n  disabled: function disabled(state) {\n    return state.disabled;\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/Users/anastasia/Documents/job/vue/mersh/src/store/modules/cart.js"],"names":["state","cartProducts","totalPrice","totalQuantity","disabled","mutations","item","record","find","element","id","variant","quantity","total","price","index","length","push","splice","indexOf","forEach","elem","i","change","parseInt","localStorage","setItem","JSON","stringify","actions","addToCart","commit","removeFromCart","updateQuantity","updateVariant","emptyCart","checkIfValid","getters"],"mappings":"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","sourcesContent":["const state = {\n  cartProducts: [],\n  totalPrice: 0,\n  totalQuantity: 0,\n  disabled: false\n}\n\nconst mutations = {\n  'ADD_TO_CART' (state, item) {\n    const record = state.cartProducts.find(element => element.id === item.id && element.variant === item.variant)\n    if (record) {\n      record.quantity += item.quantity\n      record.total += item.price * item.quantity\n    } else {\n      item.total = item.price * item.quantity\n      item.index = state.cartProducts.length\n      state.cartProducts.push(item)\n    }\n    state.totalPrice += item.price * item.quantity\n    state.totalQuantity += item.quantity\n  },\n  'REMOVE_FROM_CART' (state, item) {\n    const record = state.cartProducts.find(element => element.id === item.id && element.variant === item.variant)\n    state.cartProducts.splice(state.cartProducts.indexOf(record), 1)\n    state.cartProducts.forEach(function (elem, i) {\n      elem.index = i\n    })\n    state.totalPrice -= item.price * item.quantity\n    state.totalQuantity -= item.quantity\n  },\n  'UPDATE_QUANTITY' (state, item) {\n    const record = state.cartProducts.find(element => element.id === item.id && element.index === item.index)\n    const change = item.quantity - record.quantity\n    if (parseInt(item.quantity) === 0) {\n      state.cartProducts.splice(state.cartProducts.indexOf(record), 1)\n    } else {\n      record.quantity = item.quantity\n      record.total = record.price * item.quantity\n    }\n    state.totalPrice += item.price * change\n    state.totalQuantity += change\n  },\n  'UPDATE_VARIANT' (state, item) {\n    const record = state.cartProducts.find(element => element.id === item.id && element.index === item.index)\n    if (record) {\n      record.variant = item.variant\n    }\n    item.variant === '' ? state.disabled = true : state.disabled = false\n  },\n  'SAVE_TO_STORAGE' (state) {\n    localStorage.setItem('mershProducts', JSON.stringify(state.cartProducts))\n    localStorage.setItem('mershTotalPrice', JSON.stringify(state.totalPrice))\n    localStorage.setItem('mershTotalQuantity', JSON.stringify(state.totalQuantity))\n  },\n  'EMPTY_CART' (state) {\n    state.cartProducts = []\n    state.totalPrice = 0\n    state.totalQuantity = 0\n    state.disabled = false\n  },\n  'CHECK_IF_VALID' (state) {\n    state.cartProducts.forEach(function (elem) {\n      if (elem.variant === '') {\n        state.disabled = true\n      }\n    })\n  }\n}\n\nconst actions = {\n  addToCart: ({ commit }, item) => {\n    commit('ADD_TO_CART', item)\n    commit('SAVE_TO_STORAGE')\n  },\n  removeFromCart: ({ commit }, item) => {\n    commit('REMOVE_FROM_CART', item)\n    commit('SAVE_TO_STORAGE')\n  },\n  updateQuantity: ({ commit }, item) => {\n    commit('UPDATE_QUANTITY', item)\n    commit('SAVE_TO_STORAGE')\n  },\n  updateVariant: ({ commit }, item) => {\n    commit('UPDATE_VARIANT', item)\n    commit('SAVE_TO_STORAGE')\n  },\n  emptyCart: ({ commit }) => {\n    commit('EMPTY_CART')\n  },\n  checkIfValid: ({ commit }) => {\n    commit('CHECK_IF_VALID')\n  }\n}\n\nconst getters = {\n  cartProducts: state => {\n    return state.cartProducts\n  },\n  totalPrice: state => {\n    return state.totalPrice\n  },\n  totalQuantity: state => {\n    return state.totalQuantity\n  },\n  disabled: state => {\n    return state.disabled\n  }\n}\n\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n}\n"]}]}